<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.9.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>br.com.jbrasileiro.zeta</groupId>
	<artifactId>peixe-urbano</artifactId>
	<version>0.0.1</version>
	<packaging>pom</packaging>
	<name>Peixe-urbano project</name>
	<properties>
		<java.version>1.8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	<modules>
		<module>peixe-urbano-ms</module>
	</modules>
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<executions>
						<execution>
							<id>copy-resources</id>
							<phase>validate</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<outputDirectory>${project.build.directory}</outputDirectory>
								<resources>
									<resource>
										<directory>src/docker</directory>
										<filtering>false</filtering>
									</resource>
								</resources>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<executions>
						<execution>
							<id>add-test-integration-source</id>
							<goals>
								<goal>add-test-source</goal>
							</goals>
							<configuration>
								<sources>
									<source>src/test-integration/java</source>
								</sources>
							</configuration>
						</execution>
						<execution>
							<id>add-test-acceptance-source</id>
							<goals>
								<goal>add-test-source</goal>
							</goals>
							<configuration>
								<sources>
									<source>src/test-acceptance/java</source>
								</sources>
							</configuration>
						</execution>
						<execution>
							<id>add-test-integration-resource</id>
							<goals>
								<goal>add-test-resource</goal>
							</goals>
							<configuration>
								<resources>
									<resource>
										<directory>src/test-integration/resources</directory>
									</resource>
								</resources>
							</configuration>
						</execution>
						<execution>
							<id>add-test-acceptance-resource</id>
							<goals>
								<goal>add-test-resource</goal>
							</goals>
							<configuration>
								<resources>
									<resource>
										<directory>src/test-acceptance/resources</directory>
									</resource>
								</resources>
							</configuration>
						</execution>
						<execution>
							<id>add-test-acceptance-bdd</id>
							<goals>
								<goal>add-test-resource</goal>
							</goals>
							<configuration>
								<resources>
									<resource>
										<directory>src/test-acceptance/bdd</directory>
									</resource>
								</resources>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<executions>
						<execution>
							<phase>test</phase>
							<goals>
								<goal>test</goal>
							</goals>
							<configuration>
								<excludes>
									<exclude>**/*ITest.java</exclude>
									<exclude>**/*IntegrationTest.java</exclude>
									<exclude>**/*ATest.java</exclude>
									<exclude>**/*AcceptanceTest.java</exclude>
								</excludes>
							</configuration>
						</execution>
						<execution>
							<id>test - custom</id>
							<phase>test</phase>
							<goals>
								<goal>test</goal>
							</goals>
							<configuration>
								<includes>
									<include>**/*UT.java</include>
									<include>**/*PT.java</include>
								</includes>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>com.dkanejs.maven.plugins</groupId>
					<artifactId>docker-compose-maven-plugin</artifactId>
					<version>1.0.3</version>
					<executions>
						<execution>
							<id>docker up</id>
							<phase>pre-integration-test</phase>
							<goals>
								<goal>up</goal>
							</goals>
							<configuration>
								<skip>${skipTests}</skip>
								<verbose>false</verbose>
								<composeFile>${project.build.directory}/docker-compose.yml</composeFile>
								<detachedMode>true</detachedMode>
							</configuration>
						</execution>
						<execution>
							<phase>post-integration-test</phase>
							<goals>
								<goal>down</goal>
							</goals>
							<configuration>
								<skip>${skipTests}</skip>
								<verbose>false</verbose>
								<composeFile>${project.build.directory}/docker-compose.yml</composeFile>
								<removeVolumes>true</removeVolumes>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<configuration>
						<encoding>UTF-8</encoding>
						<redirectTestOutputToFile>true</redirectTestOutputToFile>
					</configuration>
					<executions>
						<execution>
							<phase>integration-test</phase>
							<goals>
								<goal>integration-test</goal>
							</goals>
							<configuration>
								<testSourceDirectory>src/test-integration/java</testSourceDirectory>
								<includes>
									<include>**/*IT.java</include>
									<include>**/*ITest.java</include>
								</includes>
								<argLine>-DdockerCompose.skip=true</argLine>
							</configuration>
						</execution>
						<execution>
							<id>acceptance-test</id>
							<phase>integration-test</phase>
							<goals>
								<goal>integration-test</goal>
							</goals>
							<configuration>
								<testSourceDirectory>src/test-acceptance/java</testSourceDirectory>
								<includes>
									<include>**/*AT.java</include>
									<include>**/*ATest.java</include>
								</includes>
								<argLine>-DdockerCompose.skip=false</argLine>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>